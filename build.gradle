plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    google()
    mavenCentral()
    maven { url 'https://jitpack.io' } // JitPack 저장소 추가
}

dependencies {
    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation group: 'com.auth0', name: 'java-jwt', version: '4.3.0'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.github.cdimascio:java-dotenv:5.2.2' // .env 파일을 자동으로 로드할 때 사용
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23' // portone
}

tasks.named('test') {
    useJUnitPlatform()
}
allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' } // JitPack 저장소 추가
    }
}