<!DOCTYPE html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/style.css"/>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script> <!-- axios 추가 -->
    <title>관리자 페이지 - 책 등록/수정 </title>
</head>

<body>
<!-- nav start -->
<nav>
    <div class="nav-div">
        <div>
            <a href="#">
                <img src="/image/shelf_logo.png" alt="오류" class="nav-logo"/>
            </a>
        </div>
        <div class="logout">
            <a href="/logout">로그아웃</a>
        </div>
    </div>
</nav>
<!-- nav end-->

<!-- main start -->
<main>
    <div class="main-div">
        <!-- 사이드바 -->
        {{> _components/sidebar}}

        <div class="main-section">
            <div class="main-header mb-20">e-book 등록</div>

            <form action="/api/ebook" id="ebook-form" method="post" enctype="multipart/form-data">
                <!-- SHELF -->
                <div class="form-section">
                    <div class="box-deco"></div>

                    <div class="form-field-header">
                        <!-- 책 표지 사진 -->
                        <div class="form-field-header-left">
                            <div class="image-preview">
                                <img id="preview-img" src="/image/책기본이미지.png" alt=""/>
                            </div>
                            <label for="image-upload" class="custom-file-upload">책 표지 업로드</label>
                            <input id="image-upload" type="file" name="path" accept=".jpg,.jpeg,.png,.gif"/>
                        </div>
                        <script>
                            document.addEventListener('DOMContentLoaded', function () {
                                const imageUpload = document.getElementById('image-upload');
                                const previewImg = document.getElementById('preview-img');
                                // 체인지 이벤트 발생.
                                imageUpload.addEventListener('change', function (e) {
                                    const file = e.target.files[0];
                                    if (file) {
                                        const reader = new FileReader();
                                        // 미리보기 사진 보이기
                                        reader.onload = function (e) {
                                            previewImg.src = e.target.result;
                                            previewImg.style.display = "block";
                                        }
                                        reader.readAsDataURL(file);
                                    }
                                });
                            });
                        </script>
                        <div class="form-field-header-right">
                            <div class="form-field mb-20">
                                <label for="title">제목</label>
                                <input type="text" id="title" name="title" value="탕비실">
                            </div>
                            <div class="form-field mb-20">
                                <label for="author">저자</label>
                                <input type="text" id="author" name="author" value="이미예">
                            </div>
                            <div class="form-field mb-20">
                                <label for="publisher">출판사</label>
                                <input type="text" id="publisher" name="publisher" value="한끼">
                            </div>
                            <div class="form-field mb-20">
                                <label for="category">카테고리</label>
                                <select name="category" id="category">
                                    <option value="">카테고리 선택</option>
                                    {{#categories}}
                                        <option value="{{.}}">{{.}}</option>
                                    {{/categories}}
                                </select>
                            </div>
                            <div class="form-field mb-20">
                                <label for="registrationDate">출판일</label>
                                <input type="date" id="registrationDate" name="registrationDate" value="2024-07-17">
                            </div>
                        </div>
                    </div>
                    <!-- width 100% 입력 창 -->
                    <div class="form-field mb-20">
                        <label for="bookIntro">책 소개</label>
                        <textarea type="text" id="bookIntro" name="bookIntro" rows="3" v></textarea>
                    </div>
                    <div class="form-field mb-20">
                        <label for="contentIntro">내용 소개</label>
                        <textarea type="text" id="contentIntro" name="contentIntro" rows="5"></textarea>
                    </div>
                    <div class="form-field mb-20">
                        <label for="authorIntro">작가 소개</label>
                        <textarea type="text" id="authorIntro" name="authorIntro" rows="5"></textarea>
                    </div>
                    <div class="form-field mb-20">
                        <label for="pageCount">총 페이지 수</label>
                        <input type="text" id="pageCount" name="pageCount" value="140">
                    </div>
                    <!-- 파일 선택 -->
                    <div class="small-title">epub 파일 선택</div>
                    <div class="form-field mb-20">
                        <div class="file-upload-container">
                            <label for="epubFile" class="custom-file-upload">파일 선택</label>
                            <input type="file" id="epubFile" name="epubFile" accept=".epub" style="display: none;" onchange="updateFileName()"/>
                            <span id="file-name-display">선택된 파일 없음</span>
                        </div>
                    </div>
                    <div class="bottom-btns">
                        <button id="upload-info-btn" type="submit" class="custom-upload-button">ebook 등록</button>
                        <a href="/admin/books" id="back-btn" type="button">취소</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</main>
<!-- 메인 종료 -->
<hr/>
<!-- 푸터  -->
{{> _components/footer}}

<!-- 자바 스크립트 -->
<script>
    document.getElementById("bookIntro").value = "[『달러구트 꿈 백화점』 작가의 신작] 150만부 이상을 판매하며 베스트셀러 작가로 발돋움한 이미예 작가의 첫 하이퍼리얼리즘 소설. 각 회사에서 탕비실의 빌런으로 뽑힌 사람들이 7일간의 합숙 리얼리티 쇼에 섭외된다. 누구나 받을 수 있는 미움, 혹은 누구나 범할 수 있는 오해를 임팩트 있게 다뤄냈다.";
    document.getElementById("contentIntro").value = "7일간의 합숙 리얼리티 쇼 '탕비실'. 여기에 섭외된 이들은 같이 일하는 동료들로부터 '함께 탕비실을 쓰기 싫은 사람'으로 뽑혔다. 정작 이들은 자신이 빌런으로 뽑힌 것이 의아한 상황. 하지만, 평소 자신이 동료들을 위해 베풀었던 친절과 배려가 더없이 불쾌하고 오싹한 소름으로 전달되었다는 것을 알게 됨과 동시에 이야기는 본격적으로 시작된다.";
    document.getElementById("authorIntro").value = "산대에서 재료공학을 공부하고 반도체 엔지니어로 일했다. 크라우드 펀딩 프로젝트 『주문하신 꿈은 매진입니다』(現 달러구트 꿈 백화점)으로 첫 소설을 발표해 후원자들의 열렬한 지지를 받아 성공적으로 펀딩을 종료하였다";


    function updateFileName() {
        var input = document.getElementById('epubFile');
        var fileNameDisplay = document.getElementById('file-name-display');
        if (input.files && input.files.length > 0) {
            fileNameDisplay.textContent = input.files[0].name;
        } else {
            fileNameDisplay.textContent = '선택된 파일 없음';
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('ebook-form');

        form.addEventListener('submit', function (e) {
            e.preventDefault(); // 폼 제출 기본 동작 방지

            const formData = new FormData(form);

            // 필드 유효성 검사
            const title = formData.get('title').trim();
            const author = formData.get('author').trim();
            const publisher = formData.get('publisher').trim();
            const category = formData.get('category').trim();
            const bookIntro = formData.get('bookIntro').trim();
            const contentIntro = formData.get('contentIntro').trim();
            const authorIntro = formData.get('authorIntro').trim();
            const pageCount = formData.get('pageCount').trim();
            const registrationDate = formData.get('registrationDate').trim();
            const path = form.querySelector('input[name="path"]').files[0];
            const epubFile = form.querySelector('input[name="epubFile"]').files[0];

            if (!title) {
                alert('제목을 입력하세요.');
                return;
            }
            if (!author) {
                alert('저자를 입력하세요.');
                return;
            }
            if (!publisher) {
                alert('출판사를 입력하세요.');
                return;
            }
            if (!category) {
                alert('카테고리를 선택하세요.');
                return;
            }
            if (!bookIntro) {
                alert('책 소개를 입력하세요.');
                return;
            }
            if (!contentIntro) {
                alert('내용 소개를 입력하세요.');
                return;
            }
            if (!authorIntro) {
                alert('작가 소개를 입력하세요.');
                return;
            }
            if (!pageCount) {
                alert('총 페이지 수를 입력하세요.');
                return;
            }
            if (isNaN(pageCount)) {
                alert('총 페이지 수는 숫자만 입력할 수 있습니다.');
                return;
            }
            if (!registrationDate) {
                alert('출판일을 입력하세요.');
                return;
            }
            if (!path || !/\.(jpg|jpeg|png|gif)$/i.test(path.name)) {
                alert('책 표지 이미지를 업로드하세요. (jpg, jpeg, png, gif)');
                return;
            }
            if (!epubFile || !/\.epub$/i.test(epubFile.name)) {
                alert('epub 파일을 업로드하세요. (epub)');
                return;
            }

            axios.post('/api/ebook', formData)
                    .then(response => {
                        if (response.status !== 200) {
                            throw new Error('네트워크 응답이 올바르지 않습니다.');
                        }
                        return response.data;
                    })
                    .then(data => {
                        alert('eBook 등록 성공!');
                        window.location.href = '/';
                    })
                    .catch(error => {
                        alert('eBook 등록 실패: ' + error.message);
                    });
        });
    });
</script>

</body>

</html>